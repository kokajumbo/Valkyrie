#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаЗаписи" Тогда
		Возврат;
	КонецЕсли;
	
	КлючЗаписи = Неопределено;
	Если Параметры.Свойство("Ключ", КлючЗаписи)
		И ЗначениеЗаполнено(КлючЗаписи.ИдентификаторОрганизации)
		И ЗначениеЗаполнено(КлючЗаписи.ИдентификаторКонтрагента) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	УчетныеЗаписиЭДО.Организация,
			|	Контрагент,
			|   Email КАК ЭлектроннаяПочта,
			|   ПриглашенияКОбменуЭлектроннымиДокументами.ОператорЭДО КАК ОператорКонтрагента,
			|   ТекстПриглашения КАК ТекстПриглашения,
			|   Статус
			|ИЗ
			|	РегистрСведений.ПриглашенияКОбменуЭлектроннымиДокументами КАК ПриглашенияКОбменуЭлектроннымиДокументами
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетныеЗаписиЭДО КАК УчетныеЗаписиЭДО
			|		ПО ПриглашенияКОбменуЭлектроннымиДокументами.ИдентификаторОрганизации = УчетныеЗаписиЭДО.ИдентификаторЭДО
			|ГДЕ
			|	ПриглашенияКОбменуЭлектроннымиДокументами.ИдентификаторОрганизации = &ИдентификаторОрганизации
			|	И ПриглашенияКОбменуЭлектроннымиДокументами.ИдентификаторКонтрагента = &ИдентификаторКонтрагента";
		
		Запрос.УстановитьПараметр("ИдентификаторОрганизации", КлючЗаписи.ИдентификаторОрганизации);
		Запрос.УстановитьПараметр("ИдентификаторКонтрагента", КлючЗаписи.ИдентификаторКонтрагента);
		
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		
		Если Выборка.Следующий() И Выборка.Статус <> Перечисления.СтатусыПриглашений.ТребуетсяОтправить Тогда
			Возврат;
		Иначе 
			// Добавляем параметры для того, чтобы корректно открылся помощник отправки приглашений.
			Параметры.Вставить("Организация");
			Параметры.Вставить("Контрагент");
			Параметры.Вставить("ЭлектроннаяПочта");
			Параметры.Вставить("ОператорКонтрагента");
			Параметры.Вставить("ТекстПриглашения");
			ЗаполнитьЗначенияСвойств(Параметры, Выборка);
		КонецЕсли;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ВыбраннаяФорма = "ПомощникОтправкиПриглашения";
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция НоваяТаблицаПриглашенийКОтправке() Экспорт
	
	Приглашения = Новый ТаблицаЗначений;
	Приглашения.Колонки.Добавить("ИдентификаторОрганизации");
	Приглашения.Колонки.Добавить("ИдентификаторКонтрагента");
	Приглашения.Колонки.Добавить("Организация");
	Приглашения.Колонки.Добавить("Контрагент");
	Приглашения.Колонки.Добавить("ЭлектроннаяПочта");
	Приглашения.Колонки.Добавить("ОператорЭДО");
	Приглашения.Колонки.Добавить("ТекстПриглашения");
	Приглашения.Колонки.Добавить("ТребуетсяСоглашение", Новый ОписаниеТипов("Булево"));
	Приглашения.Колонки.Добавить("СоздаватьНастройкиЭДО", Новый ОписаниеТипов("Булево"));
	
	Возврат Приглашения;
	
КонецФункции

Функция НовыйСтатусПриглашения(ИдентификаторОрганизации, ИдентификаторКонтрагента, СтатусПодключения,
	Контрагент = Неопределено, ТекстПриглашения = Неопределено, ОписаниеОшибки = Неопределено) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.ПриглашенияКОбменуЭлектроннымиДокументами.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ИдентификаторКонтрагента = ИдентификаторКонтрагента;
	МенеджерЗаписи.ИдентификаторОрганизации = ИдентификаторОрганизации;
	МенеджерЗаписи.Прочитать();
	
	Если Не МенеджерЗаписи.Выбран() Тогда
		МенеджерЗаписи.ИдентификаторКонтрагента = ИдентификаторКонтрагента;
		МенеджерЗаписи.ИдентификаторОрганизации = ИдентификаторОрганизации;
	КонецЕсли;
	
	МенеджерЗаписи.Статус = СтатусПодключения;
	
	Если ЗначениеЗаполнено(ТекстПриглашения) Тогда
		МенеджерЗаписи.ТекстПриглашения = ТекстПриглашения;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		МенеджерЗаписи.ОписаниеОшибки = ОписаниеОшибки;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		МенеджерЗаписи.Контрагент = Контрагент;
	КонецЕсли;
	
	МенеджерЗаписи.ДатаИзмененияСтатуса = ТекущаяДатаСеанса();
	МенеджерЗаписи.Записать();
	
КонецФункции

Процедура ОтправитьСписокПриглашений(ПараметрыКоманды, АдресРезультата) Экспорт
	
	КоличествоОтправлено = 0;
	
	Организация    = ПараметрыКоманды.Организация;
	СписокМаркеров = ПараметрыКоманды.СписокМаркеров;
	Приглашения    = ПараметрыКоманды.Приглашения;
	
	// Готовим таблицу с реквизитами контрагентов.
	ТаблицаПриглашений = Новый ТаблицаЗначений;
	ТаблицаПриглашений.Колонки.Добавить("Получатель");
	ТаблицаПриглашений.Колонки.Добавить("Идентификатор");
	ТаблицаПриглашений.Колонки.Добавить("Наименование");
	ТаблицаПриглашений.Колонки.Добавить("НаименованиеДляСообщенияПользователю");
	ТаблицаПриглашений.Колонки.Добавить("ИНН");
	ТаблицаПриглашений.Колонки.Добавить("КПП");
	ТаблицаПриглашений.Колонки.Добавить("АдресЭП", Новый ОписаниеТипов("Строка"));
	ТаблицаПриглашений.Колонки.Добавить("ТекстПриглашения");
	ТаблицаПриглашений.Колонки.Добавить("ВнешнийКод");
	ТаблицаПриглашений.Колонки.Добавить("ИдентификаторОрганизации");
	ТаблицаПриглашений.Колонки.Добавить("ИдентификаторКонтрагента");
	ТаблицаПриглашений.Колонки.Добавить("ОператорЭДО");
	ТаблицаПриглашений.Колонки.Добавить("ИмяФайлаСкана");
	ТаблицаПриглашений.Колонки.Добавить("ДанныеФайлаСкана");
	ТаблицаПриглашений.Колонки.Добавить("СоздаватьНастройкиЭДО", Новый ОписаниеТипов("Булево"));
	
	МассивКонтрагентов = Приглашения.ВыгрузитьКолонку("Контрагент");
	МассивИдентификаторовОрганизации = Приглашения.ВыгрузитьКолонку("ИдентификаторОрганизации");
	
	// Получаем имена необходимых реквизитов
	ИмяРеквизитаИННКонтрагента = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("ИННКонтрагента");
	ИмяРеквизитаКППКонтрагента = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("КППКонтрагента");
	ИмяРеквизитаНаименованиеКонтрагента = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("НаименованиеКонтрагента");
	ИмяРеквизитаВнешнийКодКонтрагента = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("ВнешнийКодКонтрагента");
	ИмяРеквизитаНаименованиеКонтрагентаДляСообщенияПользователю = ЭлектронноеВзаимодействиеСлужебныйПовтИсп.ИмяНаличиеОбъектаРеквизитаВПрикладномРешении("НаименованиеКонтрагентаДляСообщенияПользователю");
	
	Реквизиты = СтрШаблон("%1,%2,%3,%4,%5",
		ИмяРеквизитаНаименованиеКонтрагента,
		ИмяРеквизитаНаименованиеКонтрагентаДляСообщенияПользователю,
		ИмяРеквизитаИННКонтрагента,
		ИмяРеквизитаКППКонтрагента,
		ИмяРеквизитаВнешнийКодКонтрагента);
	
	ТекстЗапросаКонтрагентов = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Ссылка КАК Ссылка,
		|	&Реквизиты
		|ИЗ
		|	&ИмяСправочникаКонтрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Ссылка В (&МассивКонтрагентов)";
		
	ТекстЗапросаКонтрагентов = СтрЗаменить(ТекстЗапросаКонтрагентов, "&Реквизиты", Реквизиты);
	ТекстЗапросаКонтрагентов = СтрЗаменить(ТекстЗапросаКонтрагентов, "&ИмяСправочникаКонтрагенты",
		ОбщегоНазначения.ИмяТаблицыПоСсылке(МассивКонтрагентов[0]));
	
	МассивТекстовЗапроса = Новый Массив;
	МассивТекстовЗапроса.Добавить(ТекстЗапросаКонтрагентов);
	
	МассивТекстовЗапроса.Добавить(
		"ВЫБРАТЬ
		|	УчетныеЗаписиЭДО.ИдентификаторЭДО КАК ИдентификаторЭДО,
		|	УчетныеЗаписиЭДО.СпособОбменаЭД КАК СпособОбменаЭД,
		|	УчетныеЗаписиЭДО.ИмяФайлаСоглашенияНаРоуминг КАК ИмяФайлаСоглашенияНаРоуминг,
		|	УчетныеЗаписиЭДО.ДанныеСоглашенияНаРоуминг КАК ДанныеСоглашенияНаРоуминг
		|ИЗ
		|	РегистрСведений.УчетныеЗаписиЭДО КАК УчетныеЗаписиЭДО
		|ГДЕ
		|	УчетныеЗаписиЭДО.ИдентификаторЭДО В (&МассивИдентификаторовЭДО)");
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос.УстановитьПараметр("МассивКонтрагентов", МассивКонтрагентов);
	Запрос.УстановитьПараметр("МассивИдентификаторовЭДО", МассивИдентификаторовОрганизации);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ЗначениеРеквизитовПоКонтрагентам = Новый Соответствие;
	
	ВыборкаКонтрагентов = РезультатыЗапроса[0].Выбрать();
	Пока ВыборкаКонтрагентов.Следующий() Цикл
		ЗначенияРеквизитов = Новый Структура(Реквизиты);
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, ВыборкаКонтрагентов);
		ЗначениеРеквизитовПоКонтрагентам.Вставить(ВыборкаКонтрагентов.Ссылка, ЗначенияРеквизитов);
	КонецЦикла;
	
	ЗначенияРеквизитовПоУчетнымЗаписям = Новый Соответствие;
	Реквизиты = "СпособОбменаЭД,ИмяФайлаСоглашенияНаРоуминг,ДанныеСоглашенияНаРоуминг";
	
	ВыборкаУчетныхЗаписей = РезультатыЗапроса[1].Выбрать();
	Пока ВыборкаУчетныхЗаписей.Следующий() Цикл
		ЗначенияРеквизитов = Новый Структура(Реквизиты);
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, ВыборкаУчетныхЗаписей);
		Если ЗначениеЗаполнено(ВыборкаУчетныхЗаписей.ИмяФайлаСоглашенияНаРоуминг) Тогда
			ЗначенияРеквизитов.ДанныеСоглашенияНаРоуминг = Base64Строка(ВыборкаУчетныхЗаписей.ДанныеСоглашенияНаРоуминг.Получить());
		КонецЕсли;
		ЗначенияРеквизитовПоУчетнымЗаписям.Вставить(ВыборкаУчетныхЗаписей.ИдентификаторЭДО, ЗначенияРеквизитов);
	КонецЦикла;
	
	Для Каждого Маркер Из СписокМаркеров Цикл
		
		ТаблицаПриглашений.Очистить();
		
		ДанныеУчетнойЗаписи = ЗначенияРеквизитовПоУчетнымЗаписям.Получить(Маркер.Ключ);
		
		Отбор = Новый Структура("ИдентификаторОрганизации", Маркер.Ключ);
		Для Каждого СтрокаТаблицы Из Приглашения.НайтиСтроки(Отбор) Цикл
			
			ПараметрыКонтрагента = ЗначениеРеквизитовПоКонтрагентам.Получить(СтрокаТаблицы.Контрагент);
			
			Если Не ЗначениеЗаполнено(ПараметрыКонтрагента[ИмяРеквизитаИННКонтрагента]) Тогда
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'У контрагента ''%1'' не указан ИНН'"), СтрокаТаблицы.Контрагент));
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока                                      = ТаблицаПриглашений.Добавить();
			НоваяСтрока.Получатель                           = СтрокаТаблицы.Контрагент;
			НоваяСтрока.Идентификатор                        = СтрокаТаблицы.ИдентификаторКонтрагента;
			НоваяСтрока.Наименование                         = ПараметрыКонтрагента[ИмяРеквизитаНаименованиеКонтрагента];
			НоваяСтрока.НаименованиеДляСообщенияПользователю = ПараметрыКонтрагента[ИмяРеквизитаНаименованиеКонтрагентаДляСообщенияПользователю];
			НоваяСтрока.ИНН                                  = ПараметрыКонтрагента[ИмяРеквизитаИННКонтрагента];
			НоваяСтрока.КПП                                  = ПараметрыКонтрагента[ИмяРеквизитаКППКонтрагента];
			НоваяСтрока.АдресЭП                              = СтрокаТаблицы.ЭлектроннаяПочта;
			НоваяСтрока.ОператорЭДО                          = СтрокаТаблицы.ОператорЭДО;
			
			НоваяСтрока.ВнешнийКод                           = ?(ЗначениеЗаполнено(СтрокаТаблицы.ИдентификаторКонтрагента),
				СтрокаТаблицы.ИдентификаторКонтрагента, ПараметрыКонтрагента[ИмяРеквизитаВнешнийКодКонтрагента]);
			
			НоваяСтрока.ТекстПриглашения                     = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстПриглашения),
				СтрокаТаблицы.ТекстПриглашения, ОбменСКонтрагентамиСлужебный.СтандартныйШаблонПриглашения());
			
			Если СтрокаТаблицы.ТребуетсяСоглашение
				И ЗначениеЗаполнено(ДанныеУчетнойЗаписи.ИмяФайлаСоглашенияНаРоуминг) Тогда
				НоваяСтрока.ИмяФайлаСкана = ДанныеУчетнойЗаписи.ИмяФайлаСоглашенияНаРоуминг;
				НоваяСтрока.ДанныеФайлаСкана = ДанныеУчетнойЗаписи.ДанныеСоглашенияНаРоуминг;
			КонецЕсли;
			
			НоваяСтрока.ИдентификаторОрганизации = СтрокаТаблицы.ИдентификаторОрганизации;
			НоваяСтрока.ИдентификаторКонтрагента = СтрокаТаблицы.ИдентификаторКонтрагента;
			
			НоваяСтрока.СоздаватьНастройкиЭДО = СтрокаТаблицы.СоздаватьНастройкиЭДО;
			
		КонецЦикла;
		
		Если ТаблицаПриглашений.Количество() > 0 Тогда
			ПараметрыПроцедуры = Новый Структура;
			ПараметрыПроцедуры.Вставить("ТаблицаПриглашений", ТаблицаПриглашений);
			ПараметрыПроцедуры.Вставить("Маркер"            , Маркер.Значение.МаркерРасшифрованный);
			ПараметрыПроцедуры.Вставить("СпособОбменаЭД"    , ДанныеУчетнойЗаписи.СпособОбменаЭД);
			
			КоличествоОтправлено = КоличествоОтправлено
				+ ОбменСКонтрагентамиСлужебный.ОтправитьПриглашенияОператоруЭДО(ПараметрыПроцедуры);
		КонецЕсли;
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(КоличествоОтправлено, АдресРезультата);
	
КонецПроцедуры

Функция ДанныеПриглашения(ИдентификаторОрганизации, ИдентификаторКонтрагента) Экспорт
	
	Данные = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПриглашенияКОбменуЭлектроннымиДокументами.Статус КАК Статус,
		|	ПриглашенияКОбменуЭлектроннымиДокументами.ТекстПриглашения КАК ТекстПриглашения,
		|	ПриглашенияКОбменуЭлектроннымиДокументами.Email КАК Email,
		|	ПриглашенияКОбменуЭлектроннымиДокументами.Контрагент КАК Контрагент,
		|	ПриглашенияКОбменуЭлектроннымиДокументами.ИНН КАК ИНН,
		|	ПриглашенияКОбменуЭлектроннымиДокументами.КПП КАК КПП,
		|	ПриглашенияКОбменуЭлектроннымиДокументами.ИсходныйКонтрагент КАК ИсходныйКонтрагент
		|ИЗ
		|	РегистрСведений.ПриглашенияКОбменуЭлектроннымиДокументами КАК ПриглашенияКОбменуЭлектроннымиДокументами
		|ГДЕ
		|	ПриглашенияКОбменуЭлектроннымиДокументами.ИдентификаторОрганизации = &ИдентификаторОрганизации
		|	И ПриглашенияКОбменуЭлектроннымиДокументами.ИдентификаторКонтрагента = &ИдентификаторКонтрагента";
	
	Запрос.УстановитьПараметр("ИдентификаторКонтрагента", ИдентификаторКонтрагента);
	Запрос.УстановитьПараметр("ИдентификаторОрганизации", ИдентификаторОрганизации);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ТаблицаРезультат = РезультатЗапроса.Выгрузить();
	
	Если ТаблицаРезультат.Количество() > 0 Тогда
		
		Данные = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРезультат[0]);
		
	КонецЕсли;
	
	Возврат Данные;
	
КонецФункции

#КонецОбласти

#КонецЕсли
